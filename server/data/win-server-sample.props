# Sample Windows[NT] configuration file for the AppServer.
#
# Edit the claspath, install-path and config-path to reflect your 
#   local installation.  See "java.util.Properties" for syntax details.
#
# CSMART will add some properties to this list, such as the 
#   "org.cougaar.node.name=..", but otherwise this is the *complete*
#   list of properties.
#
# Note that some symbols, such as "\", must be encoded ("\\")

# On Windows machines the database drivers need the "%SYSTEMROOT%" set
#   to the windows install directory. On 2000 based machines
#   must be edited, usually to C\:\\WINDOWS
env.SYSTEMROOT=C\:\\WINNT

# Set the Cougaar install path.
org.cougaar.install.path=D\:\\opt\\cougaar

# Set the Cougaar worskpace. This is the parent directory for all
#  runtime output by Plugins, etc. It defaults to CIP\workspace
#  and is usually defined by the environment variable COUGAAR_WORKSPACE
org.cougaar.workspace=D\:\\opt\\cougaar\\workspace

# Set the cougaar system path, which is used to find third-party jars
#   (e.g. "log4j.jar").
#
# This defaults to "{org.cougaar.install.path} + \\sys", but one can
#   use a different directory by setting this property.
#org.cougaar.system.path=D\:\\opt\\cougaar\\sys

# Enable or disable persistence.
#
# By default persistence is disabled.
#org.cougaar.core.persistence.enable=true

# Add the "java-io-patch" to allow Cougaar persistence and Agent Mobility.
#
# This "java-io-patch" jar should always be included.  Since this jar
# overrides "java.io" it must be prepended to the JVM's bootclasspath.
java.Xbootclasspath/p=D\:\\opt\\cougaar\\lib\\javaiopatch.jar

# Set the classpath for starting the Node, which uses ";" separators.
#
# Typically only bootstrap.jar needs to be in here.
java.class.path=D\:\\opt\\cougaar\\lib\\bootstrap.jar

# Set the config path, which uses ";" separators.
#
# Note that this should end with an (escaped) semi-colon to indicate
# that the path specified here should be searched in addition to and 
# before the default search path.
#
# This path must contain your "cougaar.rc", database files ("*.q"), 
#   "default.psps.xml", and other configuration files.
#
# Here we override the default configuration path to include both
# the "common" directory and "GLMTrans" directory.
org.cougaar.config.path="D\:\\opt\\cougaar\\configs\\common\;D\:\\opt\\cougaar\\glmtrans\\configs\\demo-config\\config\;"

# Use the Server HotSpot Java Virtual Machine
# Warning: The JRE does not include this VM. You must have the full
# JDK installed, and must have <JDK_HOME>/bin on your System
# Environment path _before_ SYSTEMROOT/system32 (where the JRE version
# of java.exe is usually placed). 
# If you get an error like: Error: no `server' JVM at `C:\Program
# Files\Java\j2re1.4.0\bin\server\jvm.dll'.
# then this is usually the cause.
java.server

# Set some standard JVM memory settings.
#
# These are not usually modified.
java.Xms100m 
java.Xmx300m

# Set some standard COUGAAR properties.
#
# These are not usually modified.
user.timezone=GMT 
org.cougaar.core.agent.startTime=08/10/2005
org.cougaar.planning.ldm.lps.ComplainingLP.level=0 
org.cougaar.message.transport.aspects=org.cougaar.core.mts.StatisticsAspect

# Set the classname to the Bootstrapper. You must supply an additional
# command-line argument of the class you want to run, 
# usually org.cougaar.core.node.Node
java.class.name=org.cougaar.bootstrap.Bootstrapper

# Turn on/off http/s for the servlets. Turn off by setting port to -1
# Note that HTTPS is off by default, and HTTP is on port 8800
#org.cougaar.lib.web.https.port=-1

