
1. Install jsse (Java Secure Socket Extension). This is a largely
   manual procedure and so is prone to error or omission. Following
   the instructions supplied with the package. In particular, copy the
   three jar files to the jre/lib/ext subdirectory of your java
   installation and edit the jre/lib/security/java.security file to
   add the jsee security provider. The result should resemble this:
      security.provider.1=sun.security.provider.Sun
      security.provider.2=com.sun.rsajca.Provider
      security.provider.3=com.sun.net.ssl.internal.ssl.Provider
2. Create a keystore. The keystore contains keys and certificates to
   be used for SSL sockets. The full procedure involves the use of a
   Certificate Authority to provide properly signed certificates
   embodying a public key and a chain of certificates back to a
   trusted signer. Until our security infrastructure is completed, the
   following will suffice to enable execution:
      keytool -keystore keystore -alias cougaar -genkey
      keytool -keystore keystore -alias cougaar -selfcert
3. Make the keystore be used by the key and trust managers. To do
   this, set these properties in the startup scripts:
      -Djavax.net.ssl.trustStore=keystore
      -Djavax.net.ssl.trustStorePassword=password
      -Djavax.net.ssl.keyStore=keystore
      -Djavax.net.ssl.keyStorePassword=password
   Naturally, the passwords should match those used to create the
   keystore.