#!/bin/sh

# <copyright>
#  Copyright 2001-2003 BBNT Solutions, LLC
#  under sponsorship of the Defense Advanced Research Projects Agency (DARPA).
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the Cougaar Open Source License as published by
#  DARPA on the Cougaar Open Source Website (www.cougaar.org).
# 
#  THE COUGAAR SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
#  PROVIDED 'AS IS' WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
#  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
#  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
#  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
#  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
#  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#  PERFORMANCE OF THE COUGAAR SOFTWARE.
# </copyright>


#
# Node runs a cougaar society node
# usage:  Node [-v] [-preoptions ...] Nodename[.ini] [-postoptions ...]
#   -v  outputs debugging information to stdout during the script's execution
#   -preoptions are passed as VM arguments, generally -D args, but must start with "-"
#   Nodename[.ini] The name of the Node to run.  the ".ini" suffix is tolerated but discouraged.
#   -postoptions are passed as Node arguments (e.g. after the node classname) and may be of
#      any form understood by the Node class
# 
# The environment variable $COUGAAR_INSTALL_PATH should be set to the installed location
# of Cougaar if not set, the script will check $CIP and then will attempt to 
# guess based on where the Node script is located.
#

scriptname=`basename $0`
verbose=
nodename=

if [ -z "$COUGAAR_INSTALL_PATH" ]; then
    if [ "$CIP" ]; then
	COUGAAR_INSTALL_PATH="$CIP";
    else
	s=`echo "$0" | sed -e 's,/bin/.*,,'`
	if [ x$s != x ] ; then
	    COUGAAR_INSTALL_PATH=$s
	else
	    echo "Error: Could not find COUGAAR_INSTALL_PATH!";
	    exit;
	fi
    fi
fi


while [ x"$1" != x ]; do
  case $1 in
    -v) verbose=1
	shift
	continue;;
    *) 	break;;
  esac
done

socname=
if [ x"$1" != x"${1%.xml}" ]; then
  socname="${1%.xml}"
  shift
fi

nodename="${1%.ini}"
shift

if [ x"$nodename" == x ]; then
    echo "Warning: defaulting Nodename to \"Node\"";
    nodename="Node"
fi


# add your cougaar options here (or on the command line):
# To quiet the complainingLP:
# -Dorg.cougaar.planning.ldm.lps.ComplainingLP.level=0
coptions="-Dorg.cougaar.core.agent.startTime=08/10/2005"

# vm arguments to adjust (defaults are given).  You can tune the VM performance
# by fooling with these values... or you can render your society unrunnable.
vmargs="-Xmx768m -Xms64m -Xoss256k"

# environment arguments - e.g. set timezone to GMT to avoid confusion
eargs="-Duser.timezone=GMT";

# Specify the name of the node to run.
nodeargs="-Dorg.cougaar.node.name=$nodename"

# extend the bootclasspath with cougaar's persistence support
bootargs="-Xbootclasspath/p:${COUGAAR_INSTALL_PATH}/lib/javaiopatch.jar"

# name of the node class
nodeclass="org.cougaar.core.node.Node"

allargs="${bootargs} \
${vmargs} \
${eargs} \
${preargs} \
${nodeargs} \
${coptions}"

if [ $verbose ]; then allargs="-v $allargs"; fi

if [ x"$socname" != x ]; then
  #uncomment this to turn on validation
  #xmlvalidate="-Dorg.cougaar.core.node.validate=true"
  xmlvalidate=""
  xmlargs="-Dorg.cougaar.core.node.InitializationComponent=XML -Dorg.cougaar.society.file=${socname}.xml $xmlvalidate"
  allargs="$allargs $xmlargs"
fi

exec /bin/sh $COUGAAR_INSTALL_PATH/bin/boost $allargs $nodeclass $*

