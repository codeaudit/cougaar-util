<!-- Grammar specification for generic scheduler XML file -->

<!-- Top-level element -->
<!ELEMENT schedulingSpecs (assetFilter?, taskFilter?, capabilityFilter?,
                           capacityConstraint*, taskDuration?,
                           taskGrouping?)>
<!ATTLIST schedulingSpecs codeClassName CDATA ""
                     taskGroupingMode (none | alligned | unalligned) "none" >

<!-- Which assets to use -->
<!ELEMENT assetFilter (assetClassMatch)>

<!-- Which tasks to attempt to schedule -->
<!ELEMENT taskFilter EMPTY>
<!ATTLIST taskFilter verb CDATA #IMPLIED
            generatingCluster (external | internal | either) "either" >

<!-- Returns constant value rather than attempting to access the fields
     of the asset or task -->
<!ELEMENT constantAccessor EMPTY>
<!ATTLIST constantAccessor value CDATA #REQUIRED
                       type (string | double | int | boolean) #REQUIRED>

<!-- Access the specified property field of the asset -->
<!ELEMENT assetAccessor EMPTY>
<!ATTLIST assetAccessor propGroup CDATA #REQUIRED
                        propField CDATA #REQUIRED
                        units CDATA "none"
                        multiplyByQuantity (true | false) "false" >

<!-- Invoke arbitrary method on asset -->
<!ELEMENT assetMethod EMPTY>
<!ATTLIST assetMethod methodName CDATA #REQUIRED>

<!ENTITY % assetValue "assetAccessor | constantAccessor | assetMethod" >

<!-- Access a representation of a location object -->
<!ELEMENT locationAccessor EMPTY>
<!ATTLIST locationAccessor representation (geoloc | icao) #REQUIRED>

<!-- Access the specified property field of the task -->
<!ELEMENT taskAccessor (%assetValue; | locationAccessor)?>
<!ATTLIST taskAccessor preposition CDATA #REQUIRED>

<!-- Invoke arbitrary method on asset -->
<!ELEMENT taskMethod EMPTY>
<!ATTLIST taskMethod methodName CDATA #REQUIRED>

<!ENTITY % taskValue "taskAccessor | constantAccessor | taskMethod" >

<!-- Tell whether asset is an instance of this class -->
<!ELEMENT assetClassMatch EMPTY>
<!ATTLIST assetClassMatch className CDATA #REQUIRED>

<!-- Tell whether entry in a task is an element of the class -->
<!ELEMENT taskClassMatch (assetClassMatch)>
<!ATTLIST taskClassMatch preposition CDATA #REQUIRED>

<!-- Tell whether entry in a task is an element of the class -->
<!ELEMENT taskVerbMatch EMPTY>
<!ATTLIST taskVerbMatch verb CDATA #REQUIRED>

<!-- Compares the specified fields of the task and asset using the
     specified relationship -->
<!ELEMENT capabilityMatch ((%assetValue;), (%taskValue;))>
<!ATTLIST capabilityMatch
                     type (string | double | int | boolean) #REQUIRED
                     relationship (lt | eq | gt | ne | le | ge) #REQUIRED>

<!-- Combine capability matches into an arbitrary boolean expression
     to form a capability filter -->
<!ENTITY % capabilityOp "capabilityBoolean | capabilityMatch |
                         assetClassMatch | taskClassMatch |
                         taskVerbMatch" >
<!ELEMENT capabilityBoolean (%capabilityOp;)+>
<!ATTLIST capabilityBoolean operation (and | or | xor | not) #REQUIRED>
<!ELEMENT capabilityFilter (%capabilityOp;)>

<!-- Compares the specified fields of the tasks -->
<!ELEMENT taskMatch (%taskValue;)>

<!-- Combine task matches into an arbitrary boolean expression
     to form a task grouping predicate -->
<!ELEMENT taskBoolean (taskBoolean | taskMatch)+>
<!ATTLIST taskBoolean operation (and | or | xor | not) #REQUIRED>
<!ELEMENT taskGrouping (taskBoolean | taskMatch)>

<!-- Sum values of task accessor to check whether <= value in
     asset accessor -->
<!ELEMENT capacityConstraint ((%assetValue;), (%taskValue;))>

<!-- Calculates travel time using resource's speed and task's distance -->
<!ELEMENT travelTime ((%assetValue;), (%taskValue;)?, (%taskValue;)?) >
<!ATTLIST travelTime extraFactor CDATA "1.0" >

<!-- Finds how long task takes -->
<!ELEMENT taskDuration (%taskValue; | travelTime)? >
